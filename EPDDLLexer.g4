lexer grammar EPDDLLexer;

NAME            : [a-z] [a-zA-Z0-9_']* ;
AGENT_NAME      : [A-Z] [a-zA-Z0-9_]* ;
MODALITY_NAME   : [a-z] [a-zA-Z0-9_']* '.' ;
VARIABLE        : '?' [a-zA-Z0-9_']+ ;
INT             : [0-9]+ ;
WS              : [ \t\n\r]+ -> skip ;
DASH            : '-' ;
SEMICOLON       : ';' ;
LPAREN          : '(' ;
RPAREN          : ')' ;
LBRACKET        : '[' ;
RBRACKET        : ']' ;
LBRACE          : '{' ;
RBRACE          : '}' ;
COLON           : ':' ;
IMPLY           : 'imply' ;
OR              : 'or' ;
AND             : 'and' ;
NOT             : 'not' ;
EXISTS          : 'exists' ;
FORALL          : 'forall' ;
TRUE            : 'true' ;
FALSE           : 'false' ;
ASSIGN          : '<-' ;
KW              : 'kw' ;

IFF                     : 'iff' ;
WHEN                    : 'when' ;
ALWAYS                  : 'always' ;
IF                      : 'if' ;
OTHERWISE               : 'otherwise' ;
DEFINE                  : 'define' ;
DOMAIN                  : 'domain' ;
LIBRARY                 : 'library' ;
PROBLEM                 : 'problem' ;
ACTION_TYPE_LIBRARIES   : 'action-type-libraries' ;
REQUIREMENTS            : 'requirements' ;
TYPES                   : 'types' ;
PREDICATE               : 'predicate' ;
PREDICATE_FORMULA       : 'predicate-formula' ;
FORMULA                 : 'formula' ;
POSTCONDITION           : 'postcondition' ;
LITERAL                 : 'literal' ;
PREDICATES              : 'predicates' ;
MODALITY                : 'modality' ;
ACTION                  : 'action' ;
PARAMETERS              : 'parameters' ;
OBSERVABILITY_GROUPS    : 'observability-groups' ;
ALL                     : 'All' ;
EVENT                   : 'event' ;
PRECONDITION            : 'precondition' ;
POSTCONDITIONS          : 'postconditions' ;
STATE                   : 'state' ;
INIT                    : 'init' ;
GOAL                    : 'goal' ;
WHERE                   : 'where' ;
RELATIONS               : 'relations' ;
DESIGNATED              : 'designated' ;
WORLD                   : 'world' ;
OBJECTS                 : 'objects' ;
STATIC                  : 'static' ;
AGENT                   : 'agent' ;
AGENTS                  : 'agents' ;
AGENT_GROUPS            : 'agent-groups' ;
VALUTATION              : 'valuation' ;
STATE_NAME              : 'state-name' ;
OBSERVABILITY_CONDITIONS: 'observability-conditions' ;
ACTION_TYPE             : 'action-type' ;
WORLDS                  : 'worlds' ;
TRIVIAL_RELATION        : '()' ;


// Requirement tokens
DEL                        : ':del' ;
TYPING                     : ':typing' ;
EQUALITY                   : ':equality' ;
EXISTENTIAL_FORMULAE       : ':existential-formulae' ;
UNIVERSAL_FORMULAE         : ':universal-formulae' ;
UNIVERSAL_POSTCONDITIONS   : ':universal-postconditions' ;
MODAL_PRECONDITIONS        : ':modal-preconditions' ;
MODAL_POSTCONDITIONS       : ':modal-postconditions' ;
MODALITIES                 : ':modalities' ;
ONTIC_CHANGE               : ':ontic-change' ;
COMMON_KNOWLEDGE           : ':common-knowledge' ;
DYNAMIC_COMMON_KNOWLEDGE   : ':dynamic-common-knowledge' ;
FINITARY_S5_THEORY         : ':finitary-S5-theory' ;
MAX_PRECONDITIONS_DEPTH    : ':maximum-preconditions-depth' ;
MAX_POSTCONDITIONS_DEPTH   : ':maximum-postconditions-depth' ;
MAX_MODAL_DEPTH            : ':maximum-modal-depth' ;
